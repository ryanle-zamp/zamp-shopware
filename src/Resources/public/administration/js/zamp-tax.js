(function(){var t={257:function(){},961:function(t,e,a){var n=a(257);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[t.id,n,""]]),n.locals&&(t.exports=n.locals),a(346).Z("46aca552",n,!0,{})},346:function(t,e,a){"use strict";function n(t,e){for(var a=[],n={},r=0;r<e.length;r++){var i=e[r],s=i[0],o={id:t+":"+r,css:i[1],media:i[2],sourceMap:i[3]};n[s]?n[s].parts.push(o):a.push(n[s]={id:s,parts:[o]})}return a}a.d(e,{Z:function(){return h}});var r="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!r)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var i={},s=r&&(document.head||document.getElementsByTagName("head")[0]),o=null,d=0,l=!1,c=function(){},p=null,m="data-vue-ssr-id",u="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function h(t,e,a,r){l=a,p=r||{};var s=n(t,e);return v(s),function(e){for(var a=[],r=0;r<s.length;r++){var o=i[s[r].id];o.refs--,a.push(o)}e?v(s=n(t,e)):s=[];for(var r=0;r<a.length;r++){var o=a[r];if(0===o.refs){for(var d=0;d<o.parts.length;d++)o.parts[d]();delete i[o.id]}}}}function v(t){for(var e=0;e<t.length;e++){var a=t[e],n=i[a.id];if(n){n.refs++;for(var r=0;r<n.parts.length;r++)n.parts[r](a.parts[r]);for(;r<a.parts.length;r++)n.parts.push(y(a.parts[r]));n.parts.length>a.parts.length&&(n.parts.length=a.parts.length)}else{for(var s=[],r=0;r<a.parts.length;r++)s.push(y(a.parts[r]));i[a.id]={id:a.id,refs:1,parts:s}}}}function g(){var t=document.createElement("style");return t.type="text/css",s.appendChild(t),t}function y(t){var e,a,n=document.querySelector("style["+m+'~="'+t.id+'"]');if(n){if(l)return c;n.parentNode.removeChild(n)}if(u){var r=d++;e=b.bind(null,n=o||(o=g()),r,!1),a=b.bind(null,n,r,!0)}else e=w.bind(null,n=g()),a=function(){n.parentNode.removeChild(n)};return e(t),function(n){n?(n.css!==t.css||n.media!==t.media||n.sourceMap!==t.sourceMap)&&e(t=n):a()}}var f=function(){var t=[];return function(e,a){return t[e]=a,t.filter(Boolean).join("\n")}}();function b(t,e,a,n){var r=a?"":n.css;if(t.styleSheet)t.styleSheet.cssText=f(e,r);else{var i=document.createTextNode(r),s=t.childNodes;s[e]&&t.removeChild(s[e]),s.length?t.insertBefore(i,s[e]):t.appendChild(i)}}function w(t,e){var a=e.css,n=e.media,r=e.sourceMap;if(n&&t.setAttribute("media",n),p.ssrId&&t.setAttribute(m,e.id),r&&(a+="\n/*# sourceURL="+r.sources[0]+" */\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */"),t.styleSheet)t.styleSheet.cssText=a;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(a))}}}},e={};function a(n){var r=e[n];if(void 0!==r)return r.exports;var i=e[n]={id:n,exports:{}};return t[n](i,i.exports,a),i.exports}a.d=function(t,e){for(var n in e)a.o(e,n)&&!a.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},a.p="bundles/zamptax/",window?.__sw__?.assetPath&&(a.p=window.__sw__.assetPath+"/bundles/zamptax/"),function(){"use strict";a(961),Shopware.Component.register("zamp-tax-main-page",{template:'<div class="zamp-tax-main-page">\r\n	<div class="zamp-page">\r\n		<div class="zamp-page__body">\r\n			<header class="zamp-page__head-area">\r\n				<div class="zamp-page__smart-bar">\r\n					<div class="zamp-navigation">\r\n						<a href="#/sw/extension/my-extensions/listing/app?limit=25&amp;page=1" class="zamp-navigation__link">\r\n							&#x2B05; &emsp; Back</a>\r\n					</div>\r\n					<div class="zamp-content">\r\n						<div class="zamp-page__module-info">\r\n							<div class="zamp-page__module-icon">\r\n								<div class="zamp-extension-icon">\r\n									<img class="zamp-extension-icon__icon" :src="assetFilter(\'/zamptax/Zamp-Logo.png\')" alt="Zamp Logo" width="180">\r\n								</div>\r\n							</div>\r\n						</div>\r\n						<div class="zamp-page__actions">\r\n							<p class="zamp-contact-text" id="prompt-text">Need Account?</p>\r\n							<a class="zamp-button button-link" id="contact-button" target="_blank" href="https://zamp.com/platforms/shopware">Create Account</a>\r\n						</div>\r\n					</div>\r\n				</div>\r\n			</header>\r\n\r\n			<main class="zamp-page__content">\r\n				<div class="zamp-api">\r\n					<div class="zamp-card-wrapper">\r\n						<div></div>\r\n						<div class="zamp-api__card">\r\n							{% block zamp_tabs %}\r\n\r\n								<sw-tabs\r\n									class="zamp-tabs"\r\n									position-identifier="zamp-tax">\r\n				\r\n									{% block zamp_tabs_settings %}\r\n										<sw-tabs-item\r\n										:active="activeTab === \'settings\'"\r\n										name="settings"\r\n										class="zamp-tabs__tab-settings"\r\n										@click="onTabChange(\'settings\')"\r\n										>\r\n											Zamp Settings\r\n										</sw-tabs-item>						\r\n									{% endblock %}\r\n				\r\n									{% block zamp_tabs_historical_sync %}\r\n										<sw-tabs-item\r\n										:active="activeTab === \'historicalSync\'"\r\n										name="historicalSync"\r\n										class="zamp-tabs__tab-historical-sync"\r\n										@click="onTabChange(\'historicalSync\')"\r\n										>\r\n											Historical Sync\r\n										</sw-tabs-item>						\r\n									{% endblock %}\r\n				\r\n									{% block zamp_tabs_error_logs %}\r\n										<sw-tabs-item\r\n										:active="activeTab === \'errorLogs\'"\r\n										name="errorLogs"\r\n										class="zamp-tabs__tab-error-logs"\r\n										@click="onTabChange(\'errorLogs\')"\r\n										>\r\n											Logs\r\n										</sw-tabs-item>						\r\n									{% endblock %}\r\n								</sw-tabs>\r\n							{% endblock %}\r\n\r\n							{% block zamp_settings_form %}\r\n							<template\r\n							v-if="activeTab === \'settings\'">\r\n								<div class="zamp-api__card__header">\r\n									<div class="zamp-api__card__titles">\r\n										<div class="zamp-api__card__title">Zamp Tax Settings</div>\r\n									</div>\r\n								</div>\r\n								<div class="gray-divide"></div>\r\n								<div class="zamp-api__card__content">\r\n									<form action="" id="zamp-token-form">\r\n										<div class="zamp-api-input-wrapper">\r\n											<div class="zamp-field" label="Zamp API Token">\r\n												<div class="zamp-field-label">\r\n													<label for="zamp-token-input">Zamp API Token</label>\r\n												</div>\r\n												<div class="zamp-field-input">\r\n													<input type="password" placeholder="Enter Zamp API Token" maxlength="64" id="zamp-token-input" autocomplete="off">\r\n												</div>\r\n											</div>\r\n										</div>\r\n										<div class="zamp-button-wrapper">\r\n											<button id="token-button" type="submit" class="zamp-button">Connect Zamp Account</button>\r\n										</div>\r\n										<small id="small-disclaimer-text">In order to use the Zamp Tax Provider Plugin, you will need your Zamp account\'s API token. This value will be provided to you during onboarding with us! If you don\'t yet have an API token, please reach out to us by clicking the button in the top right.</small>\r\n									</form>\r\n\r\n								</div>\r\n								<div class="gray-divide"></div>\r\n								<div class="zamp-api__card__content">\r\n									<form action="" id="zamp-settings-form">\r\n										<div class="zamp-state-input-wrapper">\r\n											<div class="zamp-field" label="Taxable States">\r\n												<div class="zamp-select-input">\r\n													<sw-multi-select\r\n														v-model="selectedStates"\r\n														:options="stateOptions"\r\n														labelProperty="name"\r\n														valueProperty="code"\r\n														placeholder="Choose States"\r\n														:searchable="true"\r\n														:multiple="true"\r\n													></sw-multi-select>\r\n												</div>\r\n											</div>\r\n										</div>\r\n										<div class="zamp-calc-input-wrapper">\r\n											<div class="zamp-field" label="Allow Zamp to handle your Tax Calculations?">\r\n												<div id="zamp-calc-input" class="zamp-calc-input">\r\n													<sw-switch-field\r\n														v-model="calcEnabled"\r\n														label="Allow Zamp to handle your Tax Calculations?"\r\n													></sw-switch-field>\r\n												</div>\r\n											</div>\r\n										</div>\r\n										<div class="zamp-trans-input-wrapper">\r\n											<div class="zamp-field" label="Send your transaction reports to Zamp?">\r\n												<div id="zamp-trans-input" class="zamp-trans-input">\r\n													<sw-switch-field\r\n														v-model="transEnabled"\r\n														label="Send your transaction reports to Zamp?"\r\n													></sw-switch-field>\r\n												</div>\r\n											</div>\r\n										</div>\r\n\r\n                                        <div class="zamp-retain-input-wrapper">\r\n											<div class="zamp-field" label="Compress and Retain Zamp logs after 30 days?">\r\n												<div id="zamp-retain-input" class="zamp-retain-input">\r\n													<sw-switch-field\r\n														v-model="retainLogs"\r\n														label="Compress and Retain Zamp logs after 30 days?"\r\n													></sw-switch-field>\r\n												</div>\r\n											</div>\r\n										</div>\r\n\r\n										<div class="zamp-button-wrapper">\r\n											<button id="config-button" type="submit" class="zamp-button">Save Settings</button>\r\n											</div>\r\n										\r\n									</form>\r\n\r\n								</div>\r\n								<div class="gray-divide-last"></div>\r\n							</template>	\r\n							{% endblock %}\r\n\r\n							{% block zamp_historical_sync_form %}\r\n								<template\r\n								v-if="activeTab === \'historicalSync\'">\r\n									<div class="zamp-api__card__header">\r\n										<div class="zamp-api__card__titles">\r\n											<div class="zamp-api__card__title">Historical Data Sync</div>\r\n										</div>\r\n									</div>\r\n									<div class="gray-divide"></div>\r\n									<div class="zamp-api__card__content">\r\n										<form action="" id="historical-data-form" style="display: grid; grid-template-columns: 50% 1fr; grid-template-rows: auto auto; grid-column-gap: 16px; grid-template-areas: \'input input\'\'button context\';">\r\n											<div class="zamp-sync-input-wrapper">\r\n												<div class="zamp-field" label="Start Date">\r\n													<div class="zamp-field-label">\r\n														<label for="zamp-sync-start-input">Start Date</label>\r\n													</div>\r\n													<div class="zamp-field-input">\r\n														<input style="outline: none; border: 0px; padding: 6px; width: 100%;" type="date" id="zamp-sync-start-input" min="2022-01-01" autocomplete="off">\r\n													</div>\r\n												</div>\r\n											</div>\r\n											<div class="zamp-sync-input-wrapper">\r\n												<div class="zamp-field" label="End Date">\r\n													<div class="zamp-field-label">\r\n														<label for="zamp-sync-end-input">End Date</label>\r\n													</div>\r\n													<div class="zamp-field-input">\r\n														<input style="outline: none;  border: 0px; padding: 6px; width: 100%;" type="date" id="zamp-sync-end-input" min="2022-01-01" autocomplete="off">\r\n													</div>\r\n												</div>\r\n											</div>\r\n											<div class="zamp-button-wrapper">\r\n												<button id="sync-button" type="submit" class="zamp-button">Sync Historical Transactions</button>\r\n												<small id="small-warning-text"></small>\r\n											</div>\r\n										</form>										\r\n	\r\n									</div>\r\n									<div class="gray-divide"></div>\r\n									<div class="zamp-api__card__content">\r\n										<sw-data-grid\r\n											:showSelection="false"\r\n											:showActions="false"\r\n											:dataSource="[\r\n												{ id: \'syncRequested\', status: \'Requested\', count: totalSyncRequested },\r\n												{ id: \'syncRequested\', status: \'Completed\', count: totalSyncCompleted },\r\n												{ id: \'syncExists\', status: \'Already Exists\', count: totalSyncExists },\r\n												{ id: \'syncUpdated\', status: \'Updated\', count: totalSyncUpdated },\r\n												{ id: \'syncRequested\', status: \'Failed\', count: totalSyncFailed }\r\n												\r\n											]"\r\n\r\n											:columns="[\r\n												{ property: \'status\', label: \'Status\'},\r\n												{ property: \'count\', label: \'Count\' }\r\n											]">\r\n										</sw-data-grid>\r\n									</div>\r\n									<div class="gray-divide-last"></div>\r\n								</template>\r\n\r\n							{% endblock %}\r\n\r\n                            {% block zamp_logs_form %}\r\n								<template\r\n								v-if="activeTab === \'errorLogs\'">\r\n									<div class="zamp-api__card__header">\r\n										<div class="zamp-api__card__titles">\r\n											<div class="zamp-api__card__title">Logs</div>\r\n										</div>\r\n									</div>\r\n									<div class="gray-divide"></div>\r\n									<div class="zamp-api__card__content">\r\n										<form action="" id="zamp-logs-form" style="display: grid; grid-template-columns: 50% 1fr; grid-template-rows: auto auto; grid-column-gap: 16px; grid-template-areas: \'input input\' \'button button\';">\r\n											<div class="zamp-logs-input-wrapper">\r\n												<div class="zamp-field" label="Date">\r\n													<div class="zamp-field-label">\r\n														<label for="zamp-logs-date-input">Date</label>\r\n													</div>\r\n													<div class="zamp-field-input">\r\n														<input style="outline: none; border: 0px; padding: 6px; width: 100%;" type="date" id="zamp-logs-date-input" min="2022-01-01">\r\n													</div>\r\n												</div>\r\n											</div>\r\n											<div class="zamp-logs-input-wrapper">\r\n\r\n											</div>\r\n											<div class="zamp-button-wrapper">\r\n												<button id="logs-button" type="submit" class="zamp-button">Get Logs</button>\r\n												<small id="small-logs-text"></small>\r\n											</div>\r\n                                            <div class="zamp-button-wrapper">\r\n                                                <button id="logs-down-button" type="button" class="zamp-button">Download Logs as PDF</button>\r\n                                                <pre style="display: none; width: 0px; height: 0px;" id="small-logs-down-text"></pre>\r\n                                            </div>\r\n											\r\n										</form>										\r\n                                        \r\n									</div>\r\n\r\n                                    <hr/>\r\n\r\n									<div class="zamp-api__card__content" id="logs-ui">\r\n										\r\n									</div>\r\n                                    \r\n									<div class="gray-divide-last"></div>\r\n								</template>\r\n\r\n							{% endblock %}\r\n													\r\n						</div>\r\n						<div></div>\r\n					</div>\r\n				</div>\r\n			</main>\r\n		</div>\r\n	</div>\r\n</div>\r\n',inject:["repositoryFactory"],data:function(){return{activeTab:"settings",entityId:"",entity:void 0,paidEntity:void 0,paidId:"",paidOrders:[],calcEnabled:!1,transEnabled:!1,retainLogs:!1,selectedStates:[],stateOptions:[{code:"AL",name:"AL - Alabama"},{code:"AK",name:"AK - Alaska"},{code:"AZ",name:"AZ - Arizona"},{code:"AR",name:"AR - Arkansas"},{code:"CA",name:"CA - California"},{code:"CO",name:"CO - Colorado"},{code:"CT",name:"CT - Connecticut"},{code:"DE",name:"DE - Delaware"},{code:"DC",name:"DC - District of Columbia"},{code:"FL",name:"FL - Florida"},{code:"GA",name:"GA - Georgia"},{code:"HI",name:"HI - Hawaii"},{code:"ID",name:"ID - Idaho"},{code:"IL",name:"IL - Illinois"},{code:"IN",name:"IN - Indiana"},{code:"IA",name:"IA - Iowa"},{code:"KS",name:"KS - Kansas"},{code:"KY",name:"KY - Kentucky"},{code:"LA",name:"LA - Louisiana"},{code:"ME",name:"ME - Maine"},{code:"MD",name:"MD - Maryland"},{code:"MA",name:"MA - Massachusetts"},{code:"MI",name:"MI - Michigan"},{code:"MN",name:"MN - Minnesota"},{code:"MS",name:"MS - Mississippi"},{code:"MO",name:"MO - Missouri"},{code:"MT",name:"MT - Montana"},{code:"NE",name:"NE - Nebraska"},{code:"NV",name:"NV - Nevada"},{code:"NH",name:"NH - New Hampshire"},{code:"NJ",name:"NJ - New Jersey"},{code:"NM",name:"NM - New Mexico"},{code:"NY",name:"NY - New York"},{code:"NC",name:"NC - North Carolina"},{code:"ND",name:"ND - North Dakota"},{code:"OH",name:"OH - Ohio"},{code:"OK",name:"OK - Oklahoma"},{code:"OR",name:"OR - Oregon"},{code:"PA",name:"PA - Pennsylvania"},{code:"PR",name:"PR - Puerto Rico"},{code:"RI",name:"RI - Rhode Island"},{code:"SC",name:"SC - South Carolina"},{code:"SD",name:"SD - South Dakota"},{code:"TN",name:"TN - Tennessee"},{code:"TX",name:"TX - Texas"},{code:"UT",name:"UT - Utah"},{code:"VT",name:"VT - Vermont"},{code:"VA",name:"VA - Virginia"},{code:"WA",name:"WA - Washington"},{code:"WV",name:"WV - West Virginia"},{code:"WI",name:"WI - Wisconsin"},{code:"WY",name:"WY - Wyoming"}],totalSyncRequested:0,totalSyncCompleted:0,totalSyncExists:0,totalSyncUpdated:0,totalSyncFailed:0,orders:[]}},watch:{selectedStates:"updateSelectedStates"},computed:{assetFilter(){return Shopware.Filter.getByName("asset")},zampSettingsRepository(){return this.repositoryFactory.create("zamp_settings")},orderRepository(){return this.repositoryFactory.create("order")},orderTransactionRepository(){return this.repositoryFactory.create("order_transaction")},stateTransalationRepository(){return this.repositoryFactory.create("state_machine_state_translation")}},mixins:[Shopware.Mixin.getByName("notification")],created(){let t=Shopware.Utils.createId(),e=new Shopware.Data.Criteria;this.zampSettingsRepository.search(e,Shopware.Context.api).then(e=>{e.length>0?(this.entity=e.first(),this.entityId=e.first().id,null!==this.entity.apiToken&&(document.querySelector("#zamp-token-input").value=this.entity.apiToken,document.querySelector("#prompt-text").innerText="Have Questions?",document.querySelector("#contact-button").innerText="Contact Us",document.querySelector("#small-disclaimer-text").innerText="Connected!",document.querySelector("#small-disclaimer-text").classList.add("green-text"),document.querySelector("#token-button").innerText="Update API Token"),null!==this.entity.taxableStates&&(this.selectedStates=this.entity.taxableStates.split(",")),this.entity.calculationsEnabled&&(this.calcEnabled=!0),this.entity.transactionsEnabled&&(this.transEnabled=!0),this.entity.retainLogs&&(this.retainLogs=!0)):(this.entity=this.zampSettingsRepository.create(Shopware.Context.api),this.entity.id=t,this.entityId=t,console.log(this.entity.id),this.zampSettingsRepository.save(this.entity,Shopware.Context.api))})},watch:{activeTab(t){"settings"==t?(this.$nextTick(()=>{let t=document.getElementById("zamp-token-form"),e=document.getElementById("zamp-settings-form");console.log(t),t&&t.addEventListener("submit",t=>{this.testToken(t)}),e&&e.addEventListener("submit",t=>{this.saveConfig(t)});let a=Shopware.Utils.createId(),n=new Shopware.Data.Criteria;this.zampSettingsRepository.search(n,Shopware.Context.api).then(t=>{t.length>0?(this.entity=t.first(),this.entityId=t.first().id,null!==this.entity.apiToken&&(document.querySelector("#zamp-token-input").value=this.entity.apiToken,document.querySelector("#prompt-text").innerText="Have Questions?",document.querySelector("#contact-button").innerText="Contact Us",document.querySelector("#small-disclaimer-text").innerText="Connected!",document.querySelector("#small-disclaimer-text").classList.add("green-text"),document.querySelector("#token-button").innerText="Update API Token"),null!==this.entity.taxableStates&&(this.selectedStates=this.entity.taxableStates.split(",")),this.entity.calculationsEnabled&&(this.calcEnabled=!0),this.entity.transactionsEnabled&&(this.transEnabled=!0),this.entity.retainLogs&&(this.retainLogs=!0)):(this.entity=this.zampSettingsRepository.create(Shopware.Context.api),this.entity.id=a,this.entityId=a,console.log(this.entity.id),this.zampSettingsRepository.save(this.entity,Shopware.Context.api))})}),this.observeDOM()):"historicalSync"===t?this.$nextTick(()=>{let t=document.getElementById("historical-data-form");document.querySelector("#small-warning-text").innerText="",t&&t.addEventListener("submit",t=>{this.syncHistory(t)})}):"errorLogs"===t&&this.$nextTick(()=>{let t=document.getElementById("zamp-logs-form");if(document.querySelector("#small-logs-text").innerText="",t){t.addEventListener("submit",t=>{this.loadLog(t)});let a=document.getElementById("zamp-logs-date-input"),n=new Date().toISOString().split("T")[0];a.value=n;var e=document.createElement("script");e.src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js",document.head.appendChild(e),document.getElementById("logs-down-button").addEventListener("click",t=>{this.downloadLog(t)})}})}},mounted(){let t=document.getElementById("zamp-token-form"),e=document.getElementById("zamp-settings-form");t&&t.addEventListener("submit",t=>{this.testToken(t)}),e&&e.addEventListener("submit",t=>{this.saveConfig(t)}),this.observeDOM()},methods:{downloadLog(t){t.preventDefault(t),console.log("Download Button Pressed.");let{jsPDF:e}=window.jspdf,a=new e,n=document.getElementById("zamp-logs-date-input"),r=document.getElementById("logs-ui"),i=n.value;if(console.log(i),!i){r.textContent="Please select a date";return}let s=`${i}_log.txt`,o=`/public/${s}`;fetch(o).then(t=>{if(!t.ok)throw Error("Network response was not ok.");return t.text()}).then(t=>{r.textContent="Log Download Initiated";let e=`Zamp Shopware Log ${i}`,n=t.split("\n"),s=a.internal.pageSize.height,o=a.internal.pageSize.width;a.setFontSize(16),a.text(e,15,31),a.setFontSize(12);let d=36;n.forEach(t=>{a.splitTextToSize(t,o-30).forEach(t=>{d+10>s-15&&(a.addPage(),d=15),a.text(t,15,d),d+=10})}),a.save(`Zamp-Shopware-log-${i}.pdf`)}).catch(t=>{r.textContent="File not found for the selected date.",console.error("Error fetching file content: ",t)})},loadLog(t){t.preventDefault(),console.log("loadLog function entered");let e=document.getElementById("zamp-logs-date-input"),a=document.getElementById("logs-ui"),n=e.value;if(console.log(n),!n){a.textContent="Please select a date";return}let r=`${n}_log.txt`,i=`/public/${r}`;fetch(i).then(t=>{if(!t.ok)throw Error("Network response was not ok.");return t.text()}).then(t=>{a.innerHTML=`<pre>${t}</pre>`}).catch(t=>{a.textContent="File not found for the selected date.",console.error("Error fetching file content: ",t)})},onTabChange(t){this.activeTab=t},syncHistory(t){t.preventDefault();let e=Shopware.Context.api.authToken.access,a="",n=new Shopware.Data.Criteria;this.zampSettingsRepository.search(n,Shopware.Context.api).then(t=>{if(t.length>0){let{Criteria:r}=Shopware.Data;this.entity=t.first(),this.entityId=t.first().id,null!==this.entity.apiToken&&console.log("Token is: ",a=this.entity.apiToken);let i=new Shopware.Data.Criteria;i.addFilter(r.equals("name","Paid")),this.stateTransalationRepository.search(i,Shopware.Context.api).then(t=>{if(t.length>0){this.paidEntity=t.first(),this.paidId=t.first().stateMachineStateId;let e=new Shopware.Data.Criteria;e.addFilter(r.equals("stateId",this.paidId)),this.orderTransactionRepository.search(e,Shopware.Context.api).then(t=>{t.length>0&&(t.forEach(t=>{this.paidOrders.includes(t.orderId)||this.paidOrders.push(t.orderId)}),console.log("Paid Orders: ",this.paidOrders))})}});let s=document.getElementById("zamp-sync-start-input").value,o=document.getElementById("zamp-sync-end-input").value;if(""==s&&(s="2022-01-01"),""==o){let t=new Date,e=t.getFullYear(),a=String(t.getMonth()+1).padStart(2,"0"),n=String(t.getDate()).padStart(2,"0");o=`${e}-${a}-${n} 23:59:59`}else{let t=new Date(o),e=t.getFullYear(),a=String(t.getMonth()+1).padStart(2,"0"),n=String(t.getDate()).padStart(2,"0");o=`${e}-${a}-${n} 23:59:59`}let d=new Shopware.Data.Criteria;n.addSorting(r.sort("createdAt","DESC")),this.orderRepository.search(d,Shopware.Context.api).then(t=>{let n={};t.forEach(t=>{n[t.id]||(n[t.id]=t)});let r=Object.values(n).filter(t=>{console.log("Raw Order: ",t);let e=new Date(t.createdAt),a=new Date(s),n=new Date(o);return console.log(`Order ID: ${t.id}, Created At: ${e}, In Range: ${e>=a&&e<=n}`),e>=a&&e<=n});this.orders=r,console.log("Filtered Orders: ",this.orders),this.totalSyncRequested=this.orders.length,this.totalSyncCompleted=0,this.totalSyncFailed=0,this.totalSyncExists=0,this.orders.forEach(t=>{var n=new FormData;n.append("order_id",t.id),n.append("token",a);let r=Shopware.Context.api.apiPath;fetch(`${r}/v1/_action/zamp-tax/sync-order`,{headers:{Authorization:`Bearer ${e}`},method:"POST",body:n}).then(t=>t.json()).then(t=>{"completed"==t.status?this.totalSyncCompleted+=1:"exists"==t.status?this.totalSyncExists+=1:"failed"==t.status&&(this.totalSyncFailed+=1),console.log(t)})})}).catch(t=>{console.error("Error fetching orders: ",t)})}else document.querySelector("#small-warning-text").innerText="In order to use Historical Sync fetaure you will need to first connect your Zamp account in the Zamp Settings tab."})},testToken(t){let e=Shopware.Context.api.authToken.access;t.preventDefault();var a=document.querySelector("#zamp-token-input").value,n=new FormData;n.append("token",a);let r=Shopware.Context.api.apiPath;fetch(`${r}/v1/_action/zamp-tax/test-api`,{headers:{Authorization:`Bearer ${e}`},method:"POST",body:n}).then(t=>t.json()).then(t=>{t.valid?(this.createNotificationSuccess({title:this.$tc("global.default.success"),message:this.$tc("The operation was successful. Token Validated.")}),this.entity.apiToken=a,this.zampSettingsRepository.save(this.entity,Shopware.Context.api).then(()=>{this.zampSettingsRepository.get(this.entityId,Shopware.Context.api).then(t=>{this.entity=t})}),document.querySelector("#zamp-token-input").value=this.entity.apiToken,document.querySelector("#prompt-text").innerText="Have Questions?",document.querySelector("#contact-button").innerText="Contact Us",document.querySelector("#small-disclaimer-text").innerText="Connected!",document.querySelector("#small-disclaimer-text").classList.add("green-text"),document.querySelector("#token-button").innerText="Update API Token"):this.createNotificationError({title:this.$tc("global.notification.unspecifiedSaveErrorMessage"),message:this.$tc("The operation has failed. Token invalid")})})},updateSelectedStates(){let t=document.querySelector(".sw-select-selection-list__input");if(t){t.innerHTML="",this.selectedStates.forEach(e=>{console.log(e.code);let a=document.createElement("li");a.className="sw-select-selection-list__item-holder",a.dataset.id=e.code;let n=document.createElement("span");n.className="sw-label sw-label--appearance-default sw-label--size-default sw-label--dismissable";let r=document.createElement("span");r.className="sw-label__caption";let i=document.createElement("span");i.className="sw-select-selection-list__item",i.textContent=`${e.code} - ${e.name}`,r.appendChild(i),n.appendChild(r);let s=document.createElement("button");s.className="sw-label__dismiss",s.title="Remove",s.setAttribute("data-state",e.code),console.log("Button created for state:",e.code,"Data attribute:",s.getAttribute("data-state"));let o=document.createElement("span");o.className="sw-icon sw-icon--fill icon--regular-times-s",o.innerHTML='<svg id="meteor-icon-kit__regular-times-s" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 4.5858L10.2929 0.29289C10.6834 -0.09763 11.3166 -0.09763 11.7071 0.29289C12.0976 0.68342 12.0976 1.31658 11.7071 1.70711L7.4142 6L11.7071 10.2929C12.0976 10.6834 12.0976 11.3166 11.7071 11.7071C11.3166 12.0976 10.6834 12.0976 10.2929 11.7071L6 7.4142L1.70711 11.7071C1.31658 12.0976 0.68342 12.0976 0.29289 11.7071C-0.09763 11.3166 -0.09763 10.6834 0.29289 10.2929L4.5858 6L0.29289 1.70711C-0.09763 1.31658 -0.09763 0.68342 0.29289 0.29289C0.68342 -0.09763 1.31658 -0.09763 1.70711 0.29289L6 4.5858z" fill="#758CA3"></path></svg>',s.appendChild(o),n.appendChild(s),a.appendChild(n),t.appendChild(a)});let e=document.createElement("li");e.innerHTML='<input class="sw-select-selection-list__input" type="text" placeholder="" value="">',t.appendChild(e)}},observeDOM(){let t=document.body,e={childList:!0,subtree:!0};this.calcEventListenersAdded=!1,this.transEventListenersAdded=!1,this.retainLogsEventAdded=!1,this.observer=new MutationObserver(a=>{let n=!1;for(let t of a)if("childList"===t.type){let t=document.querySelector("#zamp-calc-input");if(t){let e=Array.from(t.querySelectorAll("*")).find(t=>t.id.startsWith("sw-field--"));e&&!this.calcEventListenersAdded&&(e.addEventListener("click",t=>{this.calcEnabled?this.calcEnabled=!1:this.calcEnabled=!0}),this.calcEventListenersAdded=!0)}let e=document.querySelector("#zamp-trans-input");if(e){let t=Array.from(e.querySelectorAll("*")).find(t=>t.id.startsWith("sw-field--"));t&&!this.transEventListenersAdded&&(t.addEventListener("click",t=>{this.transEnabled?this.transEnabled=!1:this.transEnabled=!0}),this.transEventListenersAdded=!0)}let a=document.querySelector("#zamp-retain-input");if(a){let t=Array.from(a.querySelectorAll("*")).find(t=>t.id.startsWith("sw-field--"));t&&!this.retainLogsEventAdded&&(t.addEventListener("click",t=>{this.retainLogs?this.retainLogs=!1:this.retainLogs=!0}),this.retainLogsEventsAdded=!0)}let r=document.querySelectorAll("li.sw-select-result");if(r.length>0){n=!0,r.forEach(t=>{t.addEventListener("click",e=>{let a=t.querySelector("div.sw-highlight-text").innerText.split(" - ")[0];this.selectedStates.includes(a)||(console.log(this.selectedStates),this.selectedStates.push(a))})});break}let i=document.querySelectorAll("button.sw-label__dismiss");if(i.length>0){i.forEach(t=>{t.addEventListener("click",e=>{let a=t.parentElement.parentElement.getAttribute("data-id");this.selectedStates.includes(a)&&(this.selectedStates=this.selectedStates.filter(t=>t!==a))})});break}}n||this.observer.observe(t,e)}),t&&this.observer.observe(t,e)},saveConfig(t){t.preventDefault();let e=this.selectedStates.join(",");this.entity.taxableStates=e,this.entity.calculationsEnabled=this.calcEnabled,this.entity.transactionsEnabled=this.transEnabled,this.entity.retainLogs=this.retainLogs,this.zampSettingsRepository.save(this.entity,Shopware.Context.api).then(()=>{this.createNotificationSuccess({title:this.$tc("global.default.success"),message:this.$tc("The operation was successful. Zamp Settings Saved.")}),this.zampSettingsRepository.get(this.entityId,Shopware.Context.api).then(t=>{this.entity=t})}).catch(t=>{this.createNotificationError({title:this.$tc("global.notification.unspecifiedSaveErrorMessage"),message:this.$tc("The operation has failed. "+t.message)})})}},beforeUnmount(){this.observer&&this.observer.disconnect()}}),Shopware.Module.register("zamp-tax",{type:"plugin",name:"zamp-tax",title:"Zamp Tax",description:"Zamp Tax Plugin",color:"#5075d3",icon:"default-action-settings",routes:{dashboard:{component:"zamp-tax-main-page",path:"dashboard",meta:{allow:["user","admin"]}}},navigation:[{label:"Zamp Tax",color:"#5075d3",path:"zamp.tax.dashboard",icon:"default-action-settings",parent:"sw-extension",position:100}]});let{Component:t,Mixin:e}=Shopware;t.override("sw-settings-customer-group-detail",{template:'{% extends \'@Administration/module/sw-settings-customer-group/page/sw-settings-customer-group-detail.html.twig\' %}\r\n\r\n	{% block sw_settings_customer_group_detail_content_card %}\r\n		{% parent %}\r\n	\r\n		<sw-card\r\n			:is-loading="isLoading"\r\n			title="Entity Exemption"\r\n			position-identifier="sw-settings-customer-group-detail-content"\r\n		>\r\n			<template>\r\n				<sw-container\r\n				>\r\n				{% block sw_settings_customer_group_detail_content_card_tax_exempt_code %}\r\n					<sw-text-field\r\n						v-model:value="customerGroup.taxExemptCode"\r\n						label="Entity Exemption Code"\r\n						class="sw-customer-group-tax-exempt-code"\r\n						placeholder="Enter entity exemption code"\r\n					/>\r\n				{% endblock %}\r\n				</sw-container>\r\n	\r\n			</template>\r\n		</sw-card>\r\n	\r\n		\r\n	{% endblock %}',computed:{customerGroup(){return this.$super("customerGroup")},customerGroupRepository(){return this.repositoryFactory.create("customer_group")}},watch:{customerGroup(t){t.customFields&&t.customFields.tax_exempt_code&&(this.customerGroup.taxExemptCode=t.customFields.tax_exempt_code)}},methods:{onSave(){this.$super("onSave");let t=this.customerGroup.customFields||{};t.tax_exempt_code=this.customerGroup.taxExemptCode,this.customerGroup.customFields=t,console.log("Customer Group Tax Exempt Code: ",this.customerGroup.taxExemptCode);var e=this.customerGroup.id;this.customerGroupRepository.save(this.customerGroup).then(()=>this.customerGroupRepository.get(e,Shopware.Context.api)).then(t=>{this.customerGroup=t,console.log("Entity: ",JSON.stringify(this.customerGroup))}).catch(t=>{console.error("Failed to save customer group: ",t),t.response&&t.response.data&&console.error("Error response data: ",t.response.data),this.createNotificationError({message:this.$tc("sw-settings.customerGroup.detail.saveError",0)})})}}}),t.override("sw-product-detail-base",{template:'{% extends \'@Administration/module/sw-product/view/sw-product-detail-base/sw-product-detail-base.html.twig\' %}\r\n\r\n	{% block sw_product_detail_base %}\r\n		{% parent %}\r\n		\r\n		<sw-card\r\n			:is-loading="isLoading"\r\n			title="Zamp Product Tax Code"\r\n			position-identifier="sw-product-detail-zamp-tax-code"\r\n		>\r\n			<sw-container>\r\n				<sw-text-field\r\n                    id="zamp-product-tax-code-input"\r\n					v-model:value="zampProductTaxCode"\r\n					label="Zamp Product Tax Code"\r\n					class="sw-zamp-product-tax-code"\r\n					placeholder="Enter Zamp Product Tax code"\r\n				/>\r\n			</sw-container>\r\n		</sw-card>\r\n	\r\n	{% endblock %}',data:function(){return{zampProductTaxCode:"",zampProductId:"",zampEntityId:"",zampEntity:{}}},computed:{product(){return this.$super("product")},productRepository(){return this.repositoryFactory.create("product")},zampProductTaxCodeRepository(){return this.repositoryFactory.create("zamp_product_tax_code")}},watch:{product(t){if(t){this.zampProductId=t.id;let{Criteria:e}=Shopware.Data;Shopware.Utils.createId();let a=new Shopware.Data.Criteria;a.addFilter(e.equals("productId",t.id)),this.zampProductTaxCodeRepository.search(a,Shopware.Context.api).then(t=>{t.length>0&&(this.zampEntity=t.first(),this.zampEntityId=t.first().id,null!==this.zampEntity.productId&&(this.zampProductId=this.zampEntity.productId),null!==this.zampEntity.productTaxCode&&(this.zampProductTaxCode=this.zampEntity.productTaxCode))})}}},methods:{getTaxCode(){return this.zampProductTaxCode}}}),t.override("sw-product-detail",{data(){return{productTaxCode:"",zampProductId:"",zampEntity:{}}},computed:{zampProductTaxCodeRepository(){return this.repositoryFactory.create("zamp_product_tax_code")},product(){return this.$super("product")}},methods:{onSave(){this.$super("onSave").then(()=>{let t=this.product.id;console.log("Product ID: ",t);let e=document.querySelector("#zamp-product-tax-code-input .sw-block-field__block input").value;if(console.log("Zamp Product Tax Code: ",e),t&&e){let a=new Shopware.Data.Criteria,{Criteria:n}=Shopware.Data;a.addFilter(n.equals("productId",t)),this.zampProductTaxCodeRepository.search(a,Shopware.Context.api).then(a=>{if(a.length>0){this.zampEntity=a.first();let t=this.zampEntity.id;return this.zampEntity.productTaxCode=e,this.zampProductTaxCodeRepository.save(this.zampEntity,Shopware.Context.api).then(()=>(this.createNotificationSuccess({title:"Success",message:"Product updated successfully."}),this.zampProductTaxCodeRepository.get(t,Shopware.Context.api))).then(t=>{this.zampEntity=t})}{this.zampEntity=this.zampProductTaxCodeRepository.create(Shopware.Context.api);let a=Shopware.Utils.createId();return this.zampEntity.id=a,this.zampEntity.productId=t,this.zampEntity.productTaxCode=e,this.zampProductTaxCodeRepository.save(this.zampEntity,Shopware.Context.api).then(()=>(this.createNotificationSuccess({title:"Success",message:"Product saved successfully."}),this.zampProductTaxCodeRepository.get(this.zampEntity.id,Shopware.Context.api))).then(t=>{this.zampEntity=t})}}).catch(t=>{this.createNotificationError({title:"Error",message:"Failed to save or update Zamp Product Tax Code: "+t.message})})}else console.error("Product ID or Zamp Tax Code is missing.")}).catch(t=>{console.error("Failed to save product:",t),this.createNotificationError({title:"Error",message:"Failed to save product: "+t.message})})}}})}()})();